//
//  ZIMAudioDefines.h
//  ZIMAudioDefines
//
//  Copyright Â© 2023 Zego. All rights reserved.
//

#import <AVFoundation/AVFoundation.h>
#import <Foundation/Foundation.h>

#import "ZIMAudioErrorCode.h"

NS_ASSUME_NONNULL_BEGIN
/// test
///
/// test
typedef void (^ZIMAudioCallResult)(void);

/// Active Noise Suppression mode.
typedef NS_ENUM(NSUInteger, ZIMAudioANSMode) {
    /// Soft ANS. In most instances, the sound quality will not be damaged, but
    /// some noise will remain.
    ZIMAudioANSModeSoft = 0,
    /// Medium ANS. It may damage some sound quality, but it has a good noise
    /// reduction effect.
    ZIMAudioANSModeMedium = 1,
    /// Aggressive ANS. It may significantly impair the sound quality, but it has
    /// a good noise reduction effect.
    ZIMAudioANSModeAggressive = 2,
    /// AI mode ANS. It will cause great damage to music, so it can not be used
    /// for noise suppression of sound sources that need to collect background
    /// sound. Please contact ZEGO technical support before use.
    ZIMAudioANSModeAI = 3,
    /// Balanced AI mode ANS. It will cause great damage to music, so it can not
    /// be used for noise suppression of sound sources that need to collect
    /// background sound. Please contact ZEGO technical support before use.
    ZIMAudioANSModeAIBalanced = 4
};

/// The audio route type
typedef NS_ENUM(NSUInteger, ZIMAudioRouteType) {
    /// The speaker
    ZIMAudioRouteTypeSpeaker = 0,
    /// The receiver
    ZIMAudioRouteTypeReceiver = 1
};

/// Error messages generated by the SDK.
///
/// It can be used to record the error type and error information generated by
/// the SDK, check the error code table on the ZEGO official website, and seek
/// assistance from ZEGO technical support.
@interface ZIMAudioError : NSObject

/// Error code.
@property (nonatomic, assign) ZIMAudioErrorCode code;

/// Error message.
@property (nonatomic, copy) NSString *message;

@end

/// Noise suppression configuration.
///
/// Includes noise suppression mode.
@interface ZIMAudioANSParam : NSObject

/// Noise Suppression Mode (ANS).
@property (nonatomic, assign) ZIMAudioANSMode mode;

@end

/// Recording configuration.
///
/// Configure the recording file output path and maximum recording time during
/// recording.
@interface ZIMAudioRecordConfig : NSObject

/// The output path of the recording file. Currently, only full absolute paths
/// with the suffix .mp3 or .m4a are supported. When passing in file paths in
/// other formats, the SDK will throw an illegal file path error.
@property (nonatomic, copy) NSString *filePath;

/// The maximum recording time, the default is 60000 ms, which is 60s. The unit
/// of this parameter is milliseconds, and the maximum value does not exceed
/// 120000.
@property (nonatomic, assign) unsigned int maxDuration;

@end

/// Playing configuration.
///
/// Configuration specifies the audio file path and routing type that currently
/// need to be played.
@interface ZIMAudioPlayConfig : NSObject

/// The absolute path of the file needs to be played. Currently, only full
/// absolute paths with the suffix .mp3 or .m4a are supported. When passing in
/// file paths in other formats, the SDK will throw an illegal file path error.
@property (nonatomic, copy) NSString *filePath;

/// Starting audio routing type when playing.
@property (nonatomic, assign) ZIMAudioRouteType routeType;

@end

/// Decoding configuration.
///
/// The configuration specifies the audio file path that currently needs to be
/// played and the decoding duration of each frame.
@interface ZIMAudioDecodeConfig : NSObject

/// The absolute path of the file that needs to be decoded. Currently, only full
/// absolute paths with the suffix .mp3 or .m4a are supported. When passing in
/// file paths in other formats, the SDK will throw an illegal file path error.
@property (nonatomic, copy) NSString *filePath;

/// The duration of each frame decoding, the default is 10 ms.
@property (nonatomic, assign) unsigned int durationInterval;

@end

/// Audio frame attribute parameters
///
/// Contains audio sample rate and number of channels.
@interface ZIMAudioFrameParam : NSObject

/// The audio sample rate.
@property (nonatomic, assign) int sampleRate;

/// The numbers of audio channel.
@property (nonatomic, assign) int channels;

@end

NS_ASSUME_NONNULL_END
